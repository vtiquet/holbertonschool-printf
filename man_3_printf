.\" Man page for _printf
.TH man 3 "July 2025" "1.0" "_printf man page"
.SH NAME
_printf()
.SH SYNOPSIS
.B #include "main.h"
.br
.BI "int _printf(const char *" format ", ...);"
.SH DESCRIPTION
The
.B _printf()
function writes output to stdout, the standard output stream, under the control of a
.I format
string that specifies how subsequent arguments are converted for output. It returns the number of characters printed.
.PP
The format string is composed of zero or more directives: ordinary characters (not
.B %
), which are copied unchanged to the output stream; and conversion specifications, each of which results in fetching zero or more subsequent arguments.
.PP
Each conversion specification is introduced by the character
.B %
and ends with a conversion specifier.
.SH CONVERSION_SPECIFIERS
The following specifiers are handled:
.TP
.B c
The
.I int
argument is converted to an
.I unsigned char
, and the resulting character is written.
.TP
.B s
The
.I "const char *"
argument is expected to be a pointer to an array of character type (pointer to a string). Characters from the array are written up to (but not including) a terminating null byte. If the pointer is NULL, the string "(null)" is printed.
.TP
.B d, i
The
.I int
argument is converted to signed decimal notation.
.TP
.B %
A
.B %
is written. No argument is converted. The complete conversion specification is
.BR %%.
.SH RETURN_VALUE
Upon successful return, these functions return the number of characters printed (excluding the null byte used to end output to strings). If an output error is encountered, a value of -1 is returned.
.SH EXAMPLES
The following is an example of a call to _printf:
.PP
.nf
_printf("hello, %s", "world");
.fi
.PP
This would produce the output:
.PP
.nf
hello, world
.fi
.SH AUTHORS
TIQUET Valentin, vtiquet.
